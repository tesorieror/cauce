<?xml version="1.0" encoding="UTF-8"?>
<gmfmap:Mapping
    xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore"
    xmlns:gmfmap="http://www.eclipse.org/gmf/2008/mappings"
    xmlns:gmftool="http://www.eclipse.org/gmf/2005/ToolDefinition">
  <nodes>
    <containmentFeature
        href="task.ecore#//ContextAwareSystem/routeTasks"/>
    <ownedChild>
      <domainMetaElement
          href="task.ecore#//AndSplit"/>
      <domainInitializer
          xsi:type="gmfmap:FeatureSeqInitializer">
        <initializers
            xsi:type="gmfmap:FeatureValueSpec">
          <feature
              xsi:type="ecore:EAttribute"
              href="task.ecore#//Task/id"/>
          <value
              body="system.routeTasks->iterate(c; m:Integer=0 | m.max(c.id)).max(system.systemTasks->iterate(c; m:Integer=0 | m.max(c.id))).max(system.preConditions->iterate(c; m:Integer=0 | m.max(c.id)).max(system.postConditions->iterate(c; m:Integer=0 | m.max(c.id)))).max(system.initialConditions->iterate(c; m:Integer=0 | m.max(c.id)).max(system.finalConditions->iterate(c; m:Integer=0 | m.max(c.id)))) + 1"/>
        </initializers>
      </domainInitializer>
      <tool
          xsi:type="gmftool:CreationTool"
          href="task.gmftool#//@palette/@tools.0/@tools.5"/>
      <diagramNode
          href="task.gmfgraph#AndSplit"/>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="task.ecore#//ContextAwareSystem/preConditions"/>
    <ownedChild>
      <domainMetaElement
          href="task.ecore#//PreCondition"/>
      <domainInitializer
          xsi:type="gmfmap:FeatureSeqInitializer">
        <initializers
            xsi:type="gmfmap:FeatureValueSpec">
          <feature
              xsi:type="ecore:EAttribute"
              href="task.ecore#//Condition/id"/>
          <value
              body="system.routeTasks->iterate(c; m:Integer=0 | m.max(c.id)).max(system.systemTasks->iterate(c; m:Integer=0 | m.max(c.id))).max(system.preConditions->iterate(c; m:Integer=0 | m.max(c.id)).max(system.postConditions->iterate(c; m:Integer=0 | m.max(c.id)))).max(system.initialConditions->iterate(c; m:Integer=0 | m.max(c.id)).max(system.finalConditions->iterate(c; m:Integer=0 | m.max(c.id)))) + 1"/>
        </initializers>
      </domainInitializer>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping"
          viewPattern="So: {0}"
          editorPattern="{0}"
          editPattern="{0}">
        <diagramLabel
            href="task.gmfgraph#PreSocialExpression"/>
        <features
            href="task.ecore#//Condition/socialExpression"/>
      </labelMappings>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping"
          viewPattern="Ta: {0}"
          editorPattern="{0}"
          editPattern="{0}">
        <diagramLabel
            href="task.gmfgraph#PreTaskExpression"/>
        <features
            href="task.ecore#//Condition/taskExpression"/>
      </labelMappings>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping"
          viewPattern="Sp: {0}"
          editorPattern="{0}"
          editPattern="{0}">
        <diagramLabel
            href="task.gmfgraph#PreSpaceExpression"/>
        <features
            href="task.ecore#//Condition/spaceExpression"/>
      </labelMappings>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping"
          viewPattern="Lo: {0}"
          editorPattern="{0}"
          editPattern="{0}">
        <diagramLabel
            href="task.gmfgraph#PreLogicExpression"/>
        <features
            href="task.ecore#//Condition/logicExpression"/>
      </labelMappings>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping"
          viewPattern="Da: {0}"
          editorPattern="{0}"
          editPattern="{0}">
        <diagramLabel
            href="task.gmfgraph#PreDataExpression"/>
        <features
            href="task.ecore#//Condition/dataExpression"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="task.gmftool#//@palette/@tools.0/@tools.1"/>
      <diagramNode
          href="task.gmfgraph#PreCondition"/>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="task.ecore#//ContextAwareSystem/postConditions"/>
    <ownedChild>
      <domainMetaElement
          href="task.ecore#//PostCondition"/>
      <domainInitializer
          xsi:type="gmfmap:FeatureSeqInitializer">
        <initializers
            xsi:type="gmfmap:FeatureValueSpec">
          <feature
              xsi:type="ecore:EAttribute"
              href="task.ecore#//Condition/id"/>
          <value
              body="system.routeTasks->iterate(c; m:Integer=0 | m.max(c.id)).max(system.systemTasks->iterate(c; m:Integer=0 | m.max(c.id))).max(system.preConditions->iterate(c; m:Integer=0 | m.max(c.id)).max(system.postConditions->iterate(c; m:Integer=0 | m.max(c.id)))).max(system.initialConditions->iterate(c; m:Integer=0 | m.max(c.id)).max(system.finalConditions->iterate(c; m:Integer=0 | m.max(c.id)))) + 1"/>
        </initializers>
      </domainInitializer>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping"
          viewPattern="So: {0}"
          editorPattern="{0}"
          editPattern="{0}">
        <diagramLabel
            href="task.gmfgraph#PostSocialExpression"/>
        <features
            href="task.ecore#//Condition/socialExpression"/>
      </labelMappings>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping"
          viewPattern="Ta: {0}"
          editorPattern="{0}"
          editPattern="{0}">
        <diagramLabel
            href="task.gmfgraph#PostTaskExpression"/>
        <features
            href="task.ecore#//Condition/taskExpression"/>
      </labelMappings>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping"
          viewPattern="Sp: {0}"
          editorPattern="{0}"
          editPattern="{0}">
        <diagramLabel
            href="task.gmfgraph#PostSpaceExpression"/>
        <features
            href="task.ecore#//Condition/spaceExpression"/>
      </labelMappings>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping"
          viewPattern="Lo: {0}"
          editorPattern="{0}"
          editPattern="{0}">
        <diagramLabel
            href="task.gmfgraph#PostLogicExpression"/>
        <features
            href="task.ecore#//Condition/logicExpression"/>
      </labelMappings>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping"
          viewPattern="Da: {0}"
          editorPattern="{0}"
          editPattern="{0}">
        <diagramLabel
            href="task.gmfgraph#PostDataExpression"/>
        <features
            href="task.ecore#//Condition/dataExpression"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="task.gmftool#//@palette/@tools.0/@tools.2"/>
      <diagramNode
          href="task.gmfgraph#PostCondition"/>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="task.ecore#//ContextAwareSystem/systemTasks"/>
    <ownedChild>
      <domainMetaElement
          href="task.ecore#//SkipTask"/>
      <domainInitializer
          xsi:type="gmfmap:FeatureSeqInitializer">
        <initializers
            xsi:type="gmfmap:FeatureValueSpec">
          <feature
              xsi:type="ecore:EAttribute"
              href="task.ecore#//Task/id"/>
          <value
              body="system.routeTasks->iterate(c; m:Integer=0 | m.max(c.id)).max(system.systemTasks->iterate(c; m:Integer=0 | m.max(c.id))).max(system.preConditions->iterate(c; m:Integer=0 | m.max(c.id)).max(system.postConditions->iterate(c; m:Integer=0 | m.max(c.id)))).max(system.initialConditions->iterate(c; m:Integer=0 | m.max(c.id)).max(system.finalConditions->iterate(c; m:Integer=0 | m.max(c.id)))) + 1"/>
        </initializers>
      </domainInitializer>
      <tool
          xsi:type="gmftool:CreationTool"
          href="task.gmftool#//@palette/@tools.0/@tools.10"/>
      <diagramNode
          href="task.gmfgraph#SkipTask"/>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="task.ecore#//ContextAwareSystem/finalConditions"/>
    <ownedChild>
      <domainMetaElement
          href="task.ecore#//FinalCondition"/>
      <domainInitializer
          xsi:type="gmfmap:FeatureSeqInitializer">
        <initializers
            xsi:type="gmfmap:FeatureValueSpec">
          <feature
              xsi:type="ecore:EAttribute"
              href="task.ecore#//Condition/id"/>
          <value
              body="system.routeTasks->iterate(c; m:Integer=0 | m.max(c.id)).max(system.systemTasks->iterate(c; m:Integer=0 | m.max(c.id))).max(system.preConditions->iterate(c; m:Integer=0 | m.max(c.id)).max(system.postConditions->iterate(c; m:Integer=0 | m.max(c.id)))).max(system.initialConditions->iterate(c; m:Integer=0 | m.max(c.id)).max(system.finalConditions->iterate(c; m:Integer=0 | m.max(c.id)))) + 1"/>
        </initializers>
      </domainInitializer>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping"
          viewPattern="So: {0}"
          editorPattern="{0}"
          editPattern="{0}">
        <diagramLabel
            href="task.gmfgraph#FinalSocialExpression"/>
        <features
            href="task.ecore#//Condition/socialExpression"/>
      </labelMappings>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping"
          viewPattern="Ta: {0}"
          editorPattern="{0}"
          editPattern="{0}">
        <diagramLabel
            href="task.gmfgraph#FinalTaskExpression"/>
        <features
            href="task.ecore#//Condition/taskExpression"/>
      </labelMappings>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping"
          viewPattern="Sp: {0}"
          editorPattern="{0}"
          editPattern="{0}">
        <diagramLabel
            href="task.gmfgraph#FinalSpaceExpression"/>
        <features
            href="task.ecore#//Condition/spaceExpression"/>
      </labelMappings>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping"
          viewPattern="Lo: {0}"
          editorPattern="{0}"
          editPattern="{0}">
        <diagramLabel
            href="task.gmfgraph#FinalLogicExpression"/>
        <features
            href="task.ecore#//Condition/logicExpression"/>
      </labelMappings>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping"
          viewPattern="Da: {0}"
          editorPattern="{0}"
          editPattern="{0}">
        <diagramLabel
            href="task.gmfgraph#FinalDataExpression"/>
        <features
            href="task.ecore#//Condition/dataExpression"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="task.gmftool#//@palette/@tools.0/@tools.3"/>
      <diagramNode
          href="task.gmfgraph#FinalCondition"/>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="task.ecore#//ContextAwareSystem/routeTasks"/>
    <ownedChild>
      <domainMetaElement
          href="task.ecore#//AndJoin"/>
      <domainInitializer
          xsi:type="gmfmap:FeatureSeqInitializer">
        <initializers
            xsi:type="gmfmap:FeatureValueSpec">
          <feature
              xsi:type="ecore:EAttribute"
              href="task.ecore#//Task/id"/>
          <value
              body="system.routeTasks->iterate(c; m:Integer=0 | m.max(c.id)).max(system.systemTasks->iterate(c; m:Integer=0 | m.max(c.id))).max(system.preConditions->iterate(c; m:Integer=0 | m.max(c.id)).max(system.postConditions->iterate(c; m:Integer=0 | m.max(c.id)))).max(system.initialConditions->iterate(c; m:Integer=0 | m.max(c.id)).max(system.finalConditions->iterate(c; m:Integer=0 | m.max(c.id)))) + 1"/>
        </initializers>
      </domainInitializer>
      <tool
          xsi:type="gmftool:CreationTool"
          href="task.gmftool#//@palette/@tools.0/@tools.6"/>
      <diagramNode
          href="task.gmfgraph#AndJoin"/>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="task.ecore#//ContextAwareSystem/initialConditions"/>
    <ownedChild>
      <domainMetaElement
          href="task.ecore#//InitialCondition"/>
      <domainInitializer
          xsi:type="gmfmap:FeatureSeqInitializer">
        <initializers
            xsi:type="gmfmap:FeatureValueSpec">
          <feature
              xsi:type="ecore:EAttribute"
              href="task.ecore#//Condition/id"/>
          <value
              body="system.routeTasks->iterate(c; m:Integer=0 | m.max(c.id)).max(system.systemTasks->iterate(c; m:Integer=0 | m.max(c.id))).max(system.preConditions->iterate(c; m:Integer=0 | m.max(c.id)).max(system.postConditions->iterate(c; m:Integer=0 | m.max(c.id)))).max(system.initialConditions->iterate(c; m:Integer=0 | m.max(c.id)).max(system.finalConditions->iterate(c; m:Integer=0 | m.max(c.id)))) + 1"/>
        </initializers>
      </domainInitializer>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping"
          viewPattern="So: {0}"
          editorPattern="{0}"
          editPattern="{0}">
        <diagramLabel
            href="task.gmfgraph#InitialSocialExpression"/>
        <features
            href="task.ecore#//Condition/socialExpression"/>
      </labelMappings>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping"
          viewPattern="Ta: {0}"
          editorPattern="{0}"
          editPattern="{0}">
        <diagramLabel
            href="task.gmfgraph#InitialTaskExpression"/>
        <features
            href="task.ecore#//Condition/taskExpression"/>
      </labelMappings>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping"
          viewPattern="Sp: {0}"
          editorPattern="{0}"
          editPattern="{0}">
        <diagramLabel
            href="task.gmfgraph#InitialSpaceExpression"/>
        <features
            href="task.ecore#//Condition/spaceExpression"/>
      </labelMappings>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping"
          viewPattern="Lo: {0}"
          editorPattern="{0}"
          editPattern="{0}">
        <diagramLabel
            href="task.gmfgraph#InitialLogicExpression"/>
        <features
            href="task.ecore#//Condition/logicExpression"/>
      </labelMappings>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping"
          viewPattern="Da: {0}"
          editorPattern="{0}"
          editPattern="{0}">
        <diagramLabel
            href="task.gmfgraph#InitialDataExpression"/>
        <features
            href="task.ecore#//Condition/dataExpression"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="task.gmftool#//@palette/@tools.0/@tools.0"/>
      <diagramNode
          href="task.gmfgraph#InitialCondition"/>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="task.ecore#//ContextAwareSystem/systemTasks"/>
    <ownedChild>
      <domainMetaElement
          href="task.ecore#//SimpleTask"/>
      <domainInitializer
          xsi:type="gmfmap:FeatureSeqInitializer">
        <initializers
            xsi:type="gmfmap:FeatureValueSpec">
          <feature
              xsi:type="ecore:EAttribute"
              href="task.ecore#//Task/id"/>
          <value
              body="system.routeTasks->iterate(c; m:Integer=0 | m.max(c.id)).max(system.systemTasks->iterate(c; m:Integer=0 | m.max(c.id))).max(system.preConditions->iterate(c; m:Integer=0 | m.max(c.id)).max(system.postConditions->iterate(c; m:Integer=0 | m.max(c.id)))).max(system.initialConditions->iterate(c; m:Integer=0 | m.max(c.id)).max(system.finalConditions->iterate(c; m:Integer=0 | m.max(c.id)))) + 1"/>
        </initializers>
      </domainInitializer>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping">
        <diagramLabel
            href="task.gmfgraph#SimpleTaskName"/>
        <features
            href="task.ecore#//SimpleTask/name"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="task.gmftool#//@palette/@tools.0/@tools.11"/>
      <diagramNode
          href="task.gmfgraph#SimpleTask"/>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="task.ecore#//ContextAwareSystem/routeTasks"/>
    <ownedChild>
      <domainMetaElement
          href="task.ecore#//OrSplit"/>
      <domainInitializer
          xsi:type="gmfmap:FeatureSeqInitializer">
        <initializers
            xsi:type="gmfmap:FeatureValueSpec">
          <feature
              xsi:type="ecore:EAttribute"
              href="task.ecore#//Task/id"/>
          <value
              body="system.routeTasks->iterate(c; m:Integer=0 | m.max(c.id)).max(system.systemTasks->iterate(c; m:Integer=0 | m.max(c.id))).max(system.preConditions->iterate(c; m:Integer=0 | m.max(c.id)).max(system.postConditions->iterate(c; m:Integer=0 | m.max(c.id)))).max(system.initialConditions->iterate(c; m:Integer=0 | m.max(c.id)).max(system.finalConditions->iterate(c; m:Integer=0 | m.max(c.id)))) + 1"/>
        </initializers>
      </domainInitializer>
      <tool
          xsi:type="gmftool:CreationTool"
          href="task.gmftool#//@palette/@tools.0/@tools.7"/>
      <diagramNode
          href="task.gmfgraph#OrSplit"/>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="task.ecore#//ContextAwareSystem/routeTasks"/>
    <ownedChild>
      <domainMetaElement
          href="task.ecore#//OrJoin"/>
      <domainInitializer
          xsi:type="gmfmap:FeatureSeqInitializer">
        <initializers
            xsi:type="gmfmap:FeatureValueSpec">
          <feature
              xsi:type="ecore:EAttribute"
              href="task.ecore#//Task/id"/>
          <value
              body="system.routeTasks->iterate(c; m:Integer=0 | m.max(c.id)).max(system.systemTasks->iterate(c; m:Integer=0 | m.max(c.id))).max(system.preConditions->iterate(c; m:Integer=0 | m.max(c.id)).max(system.postConditions->iterate(c; m:Integer=0 | m.max(c.id)))).max(system.initialConditions->iterate(c; m:Integer=0 | m.max(c.id)).max(system.finalConditions->iterate(c; m:Integer=0 | m.max(c.id)))) + 1"/>
        </initializers>
      </domainInitializer>
      <tool
          xsi:type="gmftool:CreationTool"
          href="task.gmftool#//@palette/@tools.0/@tools.8"/>
      <diagramNode
          href="task.gmfgraph#OrJoin"/>
    </ownedChild>
  </nodes>
  <links>
    <domainMetaElement
        href="task.ecore#//InputConditionToJoinTask"/>
    <containmentFeature
        href="task.ecore#//ContextAwareSystem/inputConditionToJoinTasks"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="task.gmftool#//@palette/@tools.0/@tools.13"/>
    <diagramLink
        href="task.gmfgraph#Edge"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="task.ecore#//InputConditionToRouteTask/source"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="task.ecore#//InputConditionToJoinTask/target"/>
    <creationConstraints>
      <sourceEnd
          body="ongoing->size()&lt;1"/>
    </creationConstraints>
  </links>
  <links>
    <domainMetaElement
        href="task.ecore#//InputConditionToSplitTask"/>
    <containmentFeature
        href="task.ecore#//ContextAwareSystem/inputConditionToSplitTasks"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="task.gmftool#//@palette/@tools.0/@tools.13"/>
    <diagramLink
        href="task.gmfgraph#Edge"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="task.ecore#//InputConditionToRouteTask/source"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="task.ecore#//InputConditionToSplitTask/target"/>
    <creationConstraints>
      <sourceEnd
          body="ongoing->size()&lt;1"/>
      <targetEnd
          body="incoming->size()&lt;1"/>
    </creationConstraints>
  </links>
  <links>
    <domainMetaElement
        href="task.ecore#//JoinTaskToOutputCondition"/>
    <containmentFeature
        href="task.ecore#//ContextAwareSystem/joinTaskToOutputConditions"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="task.gmftool#//@palette/@tools.0/@tools.13"/>
    <diagramLink
        href="task.gmfgraph#Edge"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="task.ecore#//JoinTaskToOutputCondition/source"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="task.ecore#//RouteTaskToOutputCondition/target"/>
    <creationConstraints>
      <sourceEnd
          body="ongoing->size()&lt;1"/>
      <targetEnd
          body="incoming->size()&lt;1"/>
    </creationConstraints>
  </links>
  <links>
    <domainMetaElement
        href="task.ecore#//SplitTaskToOutputCondition"/>
    <containmentFeature
        href="task.ecore#//ContextAwareSystem/splitTaskToOutputConditions"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="task.gmftool#//@palette/@tools.0/@tools.13"/>
    <diagramLink
        href="task.gmfgraph#Edge"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="task.ecore#//SplitTaskToOutputCondition/source"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="task.ecore#//RouteTaskToOutputCondition/target"/>
    <creationConstraints>
      <targetEnd
          body="incoming->size()&lt;1"/>
    </creationConstraints>
  </links>
  <links>
    <domainMetaElement
        href="task.ecore#//PreConditionToSystemTask"/>
    <containmentFeature
        href="task.ecore#//ContextAwareSystem/preConditionToSystemTasks"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="task.gmftool#//@palette/@tools.0/@tools.13"/>
    <diagramLink
        href="task.gmfgraph#Edge"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="task.ecore#//PreConditionToSystemTask/source"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="task.ecore#//PreConditionToSystemTask/target"/>
    <creationConstraints>
      <sourceEnd
          body="ongoing->size()&lt;1"/>
      <targetEnd
          body="incoming->size()&lt;1"/>
    </creationConstraints>
  </links>
  <links>
    <domainMetaElement
        href="task.ecore#//SystemTaskToPostCondition"/>
    <containmentFeature
        href="task.ecore#//ContextAwareSystem/systemTaskToPostConditions"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="task.gmftool#//@palette/@tools.0/@tools.13"/>
    <diagramLink
        href="task.gmfgraph#Edge"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="task.ecore#//SystemTaskToPostCondition/source"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="task.ecore#//SystemTaskToPostCondition/target"/>
    <creationConstraints>
      <sourceEnd
          body="ongoing->size()&lt;1"/>
      <targetEnd
          body="incoming->size()&lt;1"/>
    </creationConstraints>
  </links>
  <diagram>
    <diagramCanvas
        href="task.gmfgraph#tamm"/>
    <domainModel
        href="task.ecore#/"/>
    <domainMetaElement
        href="task.ecore#//ContextAwareSystem"/>
    <palette
        href="task.gmftool#//@palette"/>
  </diagram>
  <audits
      id="RootContainer"
      name="RootAuditContainer"
      description="Root Container">
    <childContainers
        id="TaskMetamodelAuditContainer"
        name="TaskMetamodelAuditContainer"
        description="TaskMetamodelAuditContainer">
      <audits
          name="ContexstAwareSystemNameNotNullAuditRule"
          description="ContexstAwareSystemNameNotNullAuditRule"
          id="ContexstAwareSystemNameNotNullAuditRule"
          message="ContexstAwareSystem name must not be null">
        <rule
            body="self.size()>0"/>
        <target
            xsi:type="gmfmap:DomainAttributeTarget"
            nullAsError="true">
          <attribute
              href="task.ecore#//ContextAwareSystem/name"/>
        </target>
      </audits>
    </childContainers>
    <childContainers
        id="ConditionAuditContainer"
        name="ConditionAuditContainer"
        description="ConditionAuditContainer">
      <audits
          name="ConditionSocialExpressionNotNullAuditRule"
          description="ConditionSocialExpressionNotNullAuditRule"
          id="ConditionSocialExpressionNotNullAuditRule"
          severity="WARNING"
          message="Condition socialExpression must not be null">
        <rule
            body="self.size()>0"/>
        <target
            xsi:type="gmfmap:DomainAttributeTarget"
            nullAsError="true">
          <attribute
              href="task.ecore#//Condition/socialExpression"/>
        </target>
      </audits>
      <audits
          name="ConditionSpaceExpressionNotNullAuditRule"
          description="ConditionSpaceExpressionNotNullAuditRule"
          id="ConditionSpaceExpressionNotNullAuditRule"
          severity="WARNING"
          message="Condition spaceExpression must not be null">
        <rule
            body="self.size()>0"/>
        <target
            xsi:type="gmfmap:DomainAttributeTarget"
            nullAsError="true">
          <attribute
              href="task.ecore#//Condition/spaceExpression"/>
        </target>
      </audits>
      <audits
          name="ConditionTaskExpressionNotNullAuditRule"
          description="ConditionTaskExpressionNotNullAuditRule"
          id="ConditionTaskExpressionNotNullAuditRule"
          severity="WARNING"
          message="Condition taskExpression must not be null">
        <rule
            body="self.size()>0"/>
        <target
            xsi:type="gmfmap:DomainAttributeTarget"
            nullAsError="true">
          <attribute
              href="task.ecore#//Condition/taskExpression"/>
        </target>
      </audits>
      <audits
          name="ConditionLogicExpressionNotNullAuditRule"
          description="ConditionLogicExpressionNotNullAuditRule"
          id="ConditionLogicExpressionNotNullAuditRule"
          severity="WARNING"
          message="Condition logicExpression must not be null">
        <rule
            body="self.size()>0"/>
        <target
            xsi:type="gmfmap:DomainAttributeTarget"
            nullAsError="true">
          <attribute
              href="task.ecore#//Condition/logicExpression"/>
        </target>
      </audits>
      <audits
          name="ConditionDataExpressionNotNullAuditRule"
          description="ConditionDataExpressionNotNullAuditRule"
          id="ConditionDataExpressionNotNullAuditRule"
          severity="WARNING"
          message="Condition dataExpression must not be null">
        <rule
            body="self.size()>0"/>
        <target
            xsi:type="gmfmap:DomainAttributeTarget"
            nullAsError="true">
          <attribute
              href="task.ecore#//Condition/dataExpression"/>
        </target>
      </audits>
      <audits
          name="ConditionIdNotNullAuditRule"
          description="ConditionIdNotNullAuditRule"
          id="ConditionIdNotNullAuditRule"
          severity="WARNING"
          message="Condition ID must not be null">
        <rule
            body="self>0"/>
        <target
            xsi:type="gmfmap:DomainAttributeTarget"
            nullAsError="true">
          <attribute
              href="task.ecore#//Condition/id"/>
        </target>
      </audits>
      <audits
          name="PreConditionIdUniqueAuditRule"
          description="PreConditionIdUniqueAuditRule"
          id="PreConditionIdUniqueAuditRule"
          message="PreCondition ID must be unique">
        <rule
            body="system.routeTasks->forAll(t| (t.id&lt;>self.id)) and &#xD;&#xA;system.systemTasks->forAll(t|   (t.id&lt;>self.id)) and &#xD;&#xA;system.preConditions->forAll(c| (c&lt;>self) implies (c.id&lt;>self.id)) and &#xD;&#xA;system.postConditions->forAll(c| (c.id&lt;>self.id)) and &#xD;&#xA;system.initialConditions->forAll(c| (c.id&lt;>self.id)) and &#xD;&#xA;system.finalConditions->forAll(c| (c.id&lt;>self.id)) "/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="task.ecore#//PreCondition"/>
        </target>
      </audits>
      <audits
          name="PostConditionIdUniqueAuditRule"
          description="PostConditionIdUniqueAuditRule"
          id="PostConditionIdUniqueAuditRule"
          message="PostCondition ID must be unique">
        <rule
            body="system.routeTasks->forAll(t| (t.id&lt;>self.id)) and&#xD;&#xA;system.systemTasks->forAll(t|   (t.id&lt;>self.id)) and&#xD;&#xA;system.preConditions->forAll(c| (c&lt;>self) implies (c.id&lt;>self.id)) and&#xD;&#xA;system.postConditions->forAll(c| (c&lt;>self) implies (c.id&lt;>self.id)) and&#xD;&#xA;system.initialConditions->forAll(c| (c.id&lt;>self.id)) and&#xD;&#xA;system.finalConditions->forAll(c| (c.id&lt;>self.id))"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="task.ecore#//PostCondition"/>
        </target>
      </audits>
      <audits
          name="InitialConditionIdUniqueAuditRule"
          description="InitialConditionIdUniqueAuditRule"
          id="InitialConditionIdUniqueAuditRule"
          message="InitialCondition ID must be unique">
        <rule
            body="system.routeTasks->forAll(t| (t.id&lt;>self.id)) and&#xD;&#xA;system.systemTasks->forAll(t|   (t.id&lt;>self.id)) and&#xD;&#xA;system.preConditions->forAll(c| (c&lt;>self) implies (c.id&lt;>self.id)) and&#xD;&#xA;system.postConditions->forAll(c| (c.id&lt;>self.id)) and&#xD;&#xA;system.initialConditions->forAll(c| (c&lt;>self) implies (c.id&lt;>self.id)) and&#xD;&#xA;system.finalConditions->forAll(c| (c.id&lt;>self.id))"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="task.ecore#//InitialCondition"/>
        </target>
      </audits>
      <audits
          name="FinalConditionIdUniqueAuditRule"
          description="FinalConditionIdUniqueAuditRule"
          id="FinalConditionIdUniqueAuditRule"
          message="FinalCondition ID must be unique">
        <rule
            body="system.routeTasks->forAll(t| (t.id&lt;>self.id)) and&#xD;&#xA;system.systemTasks->forAll(t|   (t.id&lt;>self.id)) and&#xD;&#xA;system.preConditions->forAll(c| (c.id&lt;>self.id)) and&#xD;&#xA;system.postConditions->forAll(c| (c.id&lt;>self.id)) and&#xD;&#xA;system.initialConditions->forAll(c| (c&lt;>self) implies (c.id&lt;>self.id)) and&#xD;&#xA;system.finalConditions->forAll(c| (c&lt;>self) implies (c.id&lt;>self.id))"/>
        <target
            xsi:type="gmfmap:DomainElementTarget">
          <element
              href="task.ecore#//FinalCondition"/>
        </target>
      </audits>
      <childContainers
          id="TaskOutputConditionAuditContainer"
          name="TaskOutputConditionAuditContainer"
          description="TaskOutputConditionAuditContainer">
        <audits
            name="TaskOutputConditionIncomingNotNullAuditRule"
            description="TaskOutputConditionIncomingNotNullAuditRule"
            id="TaskOutputConditionIncomingNotNullAuditRule"
            message="TaskOutputCondition incoming edge must not be null">
          <rule
              body="not incoming.oclIsUndefined()"/>
          <target
              xsi:type="gmfmap:DomainElementTarget">
            <element
                href="task.ecore#//TaskOutputCondition"/>
          </target>
        </audits>
        <childContainers
            id="PreConditionAuditContainer"
            name="PreConditionAuditContainer"
            description="PreConditionAuditContainer">
          <audits
              name="PreConditionOngoingNotNullAuditRule"
              description="PreConditionOngoingNotNullAuditRule"
              id="PreConditionOngoingNotNullAuditRule"
              message="PreCondition ongoing edge must not be null">
            <rule
                body="not ongoing->oclIsUndefined()"/>
            <target
                xsi:type="gmfmap:DomainElementTarget">
              <element
                  href="task.ecore#//PreCondition"/>
            </target>
          </audits>
        </childContainers>
      </childContainers>
      <childContainers
          id="TaskInputConditionAuditContainer"
          name="TaskInputConditionAuditContainer"
          description="TaskInputConditionAuditContainer">
        <audits
            name="TaskInputConditionOngoingNotNullAuditRule"
            description="TaskInputConditionOngoingNotNullAuditRule"
            id="TaskInputConditionOngoingNotNullAuditRule"
            message="TaskInputCondition ongoing edge must not be null">
          <rule
              body="not ongoing.oclIsUndefined()"/>
          <target
              xsi:type="gmfmap:DomainElementTarget">
            <element
                href="task.ecore#//TaskInputCondition"/>
          </target>
        </audits>
        <childContainers
            id="PostConditionAuditContainer"
            name="PostConditionAuditContainer"
            description="PostConditionAuditContainer">
          <audits
              name="PostConditionIncomingNotNullAuditRule"
              description="PostConditionIncomingNotNullAuditRule"
              id="PostConditionIncomingNotNullAuditRule"
              message="PostCondition incoming edge must not be null">
            <rule
                body="not incoming->oclIsUndefined()"/>
            <target
                xsi:type="gmfmap:DomainElementTarget">
              <element
                  href="task.ecore#//PostCondition"/>
            </target>
          </audits>
        </childContainers>
      </childContainers>
    </childContainers>
    <childContainers
        id="TaskAuditContainer"
        name="TaskAuditContainer"
        description="TaskAuditContainer">
      <audits
          name="TaskIdNotNullAuditRule"
          description="TaskIdNotNullAuditRule"
          id="TaskIdNotNullAuditRule"
          severity="WARNING"
          message="Task ID must not be null">
        <rule
            body="self>0"/>
        <target
            xsi:type="gmfmap:DomainAttributeTarget"
            nullAsError="true">
          <attribute
              href="task.ecore#//Task/id"/>
        </target>
      </audits>
      <childContainers
          id="JoinAuditContainer"
          name="JoinAuditContainer"
          description="JoinAuditContainer">
        <audits
            name="JoinIncomingGreaterThanZeroAuditRule"
            description="JoinIncomingGreaterThanZeroAuditRule"
            id="JoinIncomingGreaterThanZeroAuditRule"
            message="Join incoming eadges must be greater than 0">
          <rule
              body="incoming->size()>0"/>
          <target
              xsi:type="gmfmap:DomainElementTarget">
            <element
                href="task.ecore#//Join"/>
          </target>
        </audits>
        <audits
            name="JoinOngoingNotNullAuditRule"
            description="JoinOngoingNotNullAuditRule"
            id="JoinOngoingNotNullAuditRule"
            message="Join ongoing edge must not be null">
          <rule
              body="not ongoing.oclIsUndefined()"/>
          <target
              xsi:type="gmfmap:DomainElementTarget">
            <element
                href="task.ecore#//Join"/>
          </target>
        </audits>
      </childContainers>
      <childContainers
          id="SplitAuditContainer"
          name="SplitAuditContainer"
          description="SplitAuditContainer">
        <audits
            name="SplitOngoingGreaterThanZeroAuditRule"
            description="SplitOngoingGreaterThanZeroAuditRule"
            id="SplitOngoingGreaterThanZeroAuditRule"
            message="Split ongoing eadges must be greater than 0">
          <rule
              body="ongoing->size()>0"/>
          <target
              xsi:type="gmfmap:DomainElementTarget">
            <element
                href="task.ecore#//Split"/>
          </target>
        </audits>
        <audits
            name="SplitIncomingNotNullAuditRule"
            description="SplitIncomingNotNullAuditRule"
            id="SplitIncomingNotNullAuditRule"
            message="Split incoming edge must not be null">
          <rule
              body="not incoming.oclIsUndefined()"/>
          <target
              xsi:type="gmfmap:DomainElementTarget">
            <element
                href="task.ecore#//Split"/>
          </target>
        </audits>
      </childContainers>
      <childContainers
          id="SystemTaskAuditContainer"
          name="SystemTaskAuditContainer"
          description="SystemTaskAuditContainer">
        <audits
            name="SystemTaskIncomingNotNullAuditRule"
            description="SystemTaskIncomingNotNullAuditRule"
            id="SystemTaskIncomingNotNullAuditRule"
            message="SystemTask incoming edge must not be null">
          <rule
              body="not incoming.oclIsUndefined()"/>
          <target
              xsi:type="gmfmap:DomainElementTarget">
            <element
                href="task.ecore#//SystemTask"/>
          </target>
        </audits>
        <audits
            name="SystemTaskOngoingNotNullAuditRule"
            description="SystemTaskOngoingNotNullAuditRule"
            id="SystemTaskOngoingNotNullAuditRule"
            message="SystemTask ongoing edge must not be null">
          <rule
              body="not ongoing.oclIsUndefined()"/>
          <target
              xsi:type="gmfmap:DomainElementTarget">
            <element
                href="task.ecore#//SystemTask"/>
          </target>
        </audits>
        <audits
            name="SimpleTaskNameNotNullAuditRule"
            description="SimpleTaskNameNotNullAuditRule"
            id="SimpleTaskNameNotNullAuditRule"
            message="SimpleTask name must not be null">
          <rule
              body="self.size()>0"/>
          <target
              xsi:type="gmfmap:DomainAttributeTarget"
              nullAsError="true">
            <attribute
                href="task.ecore#//SimpleTask/name"/>
          </target>
        </audits>
        <audits
            name="SimpleTaskNameUniqueAuditRule"
            description="SimpleTaskNameUniqueAuditRule"
            id="SimpleTaskNameUniqueAuditRule"
            message="SimpleTask name must be unique">
          <rule
              body="system.systemTasks->forAll(t | (t.oclIsTypeOf(SimpleTask) and t&lt;>self) implies (self.oclAsType(SimpleTask).name&lt;>t.oclAsType(SimpleTask).name))"/>
          <target
              xsi:type="gmfmap:DomainElementTarget">
            <element
                href="task.ecore#//SimpleTask"/>
          </target>
        </audits>
        <audits
            name="SystemTaskIdUniqueAuditRule"
            description="SystemTaskIdUniqueAuditRule"
            id="SystemTaskIdUniqueAuditRule"
            message="SystemTask ID must be unique">
          <rule
              body="system.routeTasks->forAll(t| (t.id&lt;>self.id)) and&#xD;&#xA;system.systemTasks->forAll(t|  (t&lt;>self) implies (t.id&lt;>self.id)) and&#xD;&#xA;system.preConditions->forAll(c| (c.id&lt;>self.id)) and&#xD;&#xA;system.postConditions->forAll(c| (c.id&lt;>self.id)) and&#xD;&#xA;system.initialConditions->forAll(c| (c.id&lt;>self.id)) and&#xD;&#xA;system.finalConditions->forAll(c| (c.id&lt;>self.id))"/>
          <target
              xsi:type="gmfmap:DomainElementTarget">
            <element
                href="task.ecore#//SystemTask"/>
          </target>
        </audits>
      </childContainers>
      <childContainers
          id="RouteTaskAuditContainer"
          name="RouteTaskAuditContainer"
          description="RouteTaskAuditContainer">
        <audits
            name="RouteTaskIdUniqueAuditRule"
            description="RouteTaskIdUniqueAuditRule"
            id="RouteTaskIdUniqueAuditRule"
            message="RouteTask ID must be unique">
          <rule
              body="system.routeTasks->forAll(t| (t&lt;>self) implies (t.id&lt;>self.id)) and&#xD;&#xA;system.systemTasks->forAll(t| (t.id&lt;>self.id)) and&#xD;&#xA;system.preConditions->forAll(c| (c.id&lt;>self.id)) and&#xD;&#xA;system.postConditions->forAll(c| (c.id&lt;>self.id)) and&#xD;&#xA;system.initialConditions->forAll(c| (c.id&lt;>self.id)) and&#xD;&#xA;system.finalConditions->forAll(c| (c.id&lt;>self.id))"/>
          <target
              xsi:type="gmfmap:DomainElementTarget">
            <element
                href="task.ecore#//RouteTask"/>
          </target>
        </audits>
      </childContainers>
    </childContainers>
  </audits>
</gmfmap:Mapping>
